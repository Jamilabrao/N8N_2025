{"createdAt":"2025-04-06T18:27:03.576Z","updatedAt":"2025-08-01T04:03:51.206Z","id":"JqVXJRCCujgfX2vj","name":"[SANTOBET] - CRM","active":false,"isArchived":false,"nodes":[{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":409291493,"mode":"list","cachedResultName":"DASHBOARD","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=409291493"},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1080,-840],"id":"1d7c6026-674a-4f60-9bd1-5acaf4bdb850","name":"Google Sheets","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[1320,-840],"id":"e5b10f52-d14a-4062-9287-ab5b54786951","name":"Aggregate"},{"parameters":{"content":"## DASHBOARD GERAL\nEXIBE DADOS GERAIS DA OPERAÇÃO","height":340,"width":1320,"color":6},"type":"n8n-nodes-base.stickyNote","position":[820,-960],"typeVersion":1,"id":"91d16094-cdcc-470f-8e9b-14a3c795e859","name":"Sticky Note7"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Dashboard Santobet</title>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n      padding: 20px;\n    }\n\n    h1 {\n      text-align: center;\n      background-color: #00bcd4;\n      color: #000;\n      padding: 12px;\n      border-radius: 10px;\n      font-size: 24px;\n    }\n\n    h2 {\n      margin-top: 30px;\n      color: #00bcd4;\n      border-bottom: 2px solid #00bcd4;\n      padding-bottom: 5px;\n      font-size: 18px; /* Define o tamanho da fonte */\n    }\n\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 15px;\n      justify-content: space-between;\n    }\n\n    .card {\n      background-color: #1e2a38;\n      padding: 15px;\n      flex: 1 0 22%;\n      border-radius: 12px;\n      border: 1px solid #00bcd4;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n      transition: transform 0.2s ease;\n    }\n\n    .card:hover {\n      transform: scale(1.03);\n    }\n\n    .card h3 {\n      color: #a8dadc;\n      font-size: 14px;\n      margin: 0 0 5px 0;\n      font-weight: 500;\n    }\n\n    .card p {\n      font-size: 20px;\n      font-weight: bold;\n      color: #f1faee;\n      margin: 0;\n    }\n\n    .charts-row {\n      display: flex;\n      justify-content: center;\n      gap: 40px;\n      margin-top: 30px;\n      flex-wrap: wrap;\n    }\n\n    .chart-box {\n      background-color: #264653;\n      padding: 20px;\n      border-radius: 10px;\n      width: 320px;\n      height: 340px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    canvas {\n      width: 300px !important;\n      height: 300px !important;\n    }\n  </style>\n</head>\n<body>\n  <h1>DASHBOARD SANTOBET - DATA {{ new Date().toLocaleDateString('pt-BR') }}</h1>\n\n  <h2>DADOS GERAIS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>N° JOGADORES</h3><p>{{ $json[\"data\"][2][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>N° AFILIADOS</h3><p>{{ $json[\"data\"][4][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>N° PIX GERADOS</h3><p>{{ $json[\"data\"][7][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>RECEITA TOTAL</h3><p>{{ $json[\"data\"][13][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>SAÍDA TOTAL</h3><p>{{ $json[\"data\"][15][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>SALDO BSPAY</h3><p>{{ $json[\"data\"][17][\"DASHBOARD SANTOBET\"] }}</p></div>\n  </div>\n\n  <h2>SAQUES</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>SAQUES JOGADOR</h3><p>{{ $json[\"data\"][2][\"col_3\"] }}</p></div>\n    <div class=\"card\"><h3>SAQUE AFILIADOS</h3><p>{{ $json[\"data\"][4][\"col_3\"] }}</p></div>\n  </div>\n\n  <h2>DADOS ÚLTIMAS 24 HORAS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>N° JOGADORES 24H</h3><p>{{ $json.data[11].col_5 }}</p></div>\n    <div class=\"card\"><h3>N° AFILIADOS 24H</h3><p>{{ $json.data[13].col_5 }}</p></div>\n    <div class=\"card\"><h3>DEPÓSITOS 24H</h3><p>{{ $json.data[9].col_5 }}</p></div>\n    <div class=\"card\"><h3>SAQUES JOGADOR 24H</h3><p>{{ $json.data[7].col_5 }}</p></div>\n    <div class=\"card\"><h3>SAQUES AFILIADO 24H</h3><p>{{ $json.data[4].col_5 }}</p></div>\n    <div class=\"card\"><h3>SAQUES TOTAL 24H</h3><p>{{ $json.data[2].col_5 }}</p></div>\n  </div>\n\n  <h2>DESPESAS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>GGR PAGO</h3><p>{{ $json.data[2].col_9 }}</p></div>\n    <div class=\"card\"><h3>DESPESAS DIVERSAS</h3><p>{{ $json.data[4].col_9 }}</p></div>\n  </div>\n\n  <h2>MÉTRICAS FINAIS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>DEPÓSITO MÉDIO</h3><p>{{ $json.data[7].col_3 }}</p></div>\n    <div class=\"card\"><h3>% PIX PAGOS</h3><p>{{ $json.data[9].col_3 }}</p></div>\n  </div>\n\n  <h2>VISUALIZAÇÃO GRÁFICA</h2>\n  <div class=\"charts-row\">\n    <div class=\"chart-box\">\n      <canvas id=\"graficoReceitaSaldo\"></canvas>\n    </div>\n    <div class=\"chart-box\">\n      <canvas id=\"graficoJogadoresAfiliados\"></canvas>\n    </div>\n  </div>\n\n  <script>\n    const receitaTotal = parseFloat(\"{{ $json['data'][13]['DASHBOARD SANTOBET'] }}\".replace(/[^\\d,.-]/g, '').replace(',', '.')) || 0;\n    const saidaTotal = parseFloat(\"{{ $json[\"data\"][15][\"DASHBOARD SANTOBET\"] }}\".replace(/[^\\d,.-]/g, '').replace(',', '.')) || 0;\n\n    const numeroJogadores = parseInt(\"{{ $json['data'][2]['DASHBOARD SANTOBET'] }}\") || 0;\n    const numeroAfiliados = parseInt(\"{{ $json['data'][4]['DASHBOARD SANTOBET'] }}\") || 0;\n\n    new Chart(document.getElementById(\"graficoReceitaSaldo\"), {\n      type: 'pie',\n      data: {\n        labels: [\"Receita Total\", \"Saida Total\"],\n        datasets: [{\n          backgroundColor: [\"#00bcd4\", \"#a8dadc\"],\n          data: [receitaTotal, saidaTotal]\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: { color: 'white' }\n          }\n        }\n      }\n    });\n\n    new Chart(document.getElementById(\"graficoJogadoresAfiliados\"), {\n      type: 'pie',\n      data: {\n        labels: [\"Jogadores\", \"Afiliados\"],\n        datasets: [{\n          backgroundColor: [\"#f1faee\", \"#ffb703\"],\n          data: [numeroJogadores, numeroAfiliados]\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: { color: 'white' }\n          }\n        }\n      }\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1720,-840],"id":"0a5b2667-49c9-451b-9ce4-770b4c840bbb","name":"HTML1"},{"parameters":{"path":"dashboard","responseMode":"responseNode","options":{}},"id":"f526c28e-dbf6-4312-bd28-fb51f1f3cfb1","name":"Serve Frontend","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,-840],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1920,-840],"id":"9e5697d5-0510-4769-a1fc-dbea550a18a0","name":"Respond to Webhook1"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Painel Principal - Santobet</title>\n  <style>\n    * {\n      box-sizing: border-box;\n    }\n\n    body {\n      margin: 0;\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      display: flex;\n      height: 100vh;\n    }\n\n    .sidebar {\n      width: 250px;\n      background-color: #1e2a38;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      border-right: 2px solid #00bcd4;\n    }\n\n    .sidebar h2 {\n      color: #00bcd4;\n      margin-bottom: 30px;\n      text-align: center;\n      font-size: 20px;\n    }\n\n    .menu a {\n      display: block;\n      padding: 12px 16px;\n      margin-bottom: 10px;\n      color: #f1f1f1;\n      text-decoration: none;\n      background-color: #2c3e50;\n      border-radius: 8px;\n      transition: background-color 0.2s ease;\n      cursor: pointer;\n    }\n\n    .menu a:hover {\n      background-color: #00bcd4;\n      color: #000;\n    }\n\n    .main {\n      flex: 1;\n      padding: 0;\n      overflow: hidden;\n    }\n\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n    }\n\n    .placeholder {\n      color: #aaa;\n      padding: 30px;\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"sidebar\">\n    <h2>Santobet</h2>\n    <div class=\"menu\">\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/dashboard')\">📊 Dashboard</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBjogadores')\">🎮 Jogadores</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBafiliados')\">🤝 Afiliados</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBdespesas')\">💸 Despesas</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBggr')\">📈 GGR</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBsaquejogador')\">🏦 Saques Jogador</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBsaqueafiliados')\">👥 Saques Afiliados</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/SBdepositos')\">💰 Depósitos Pagos</a>\n    </div>\n  </div>\n\n  <div class=\"main\" id=\"content\">\n    <div class=\"placeholder\">Carregando Dashboard...</div>\n  </div>\n\n  <script>\n    function loadIframe(url) {\n      const content = document.getElementById('content');\n      content.innerHTML = `<iframe src=\"${url}\"></iframe>`;\n    }\n\n    window.onload = function() {\n      loadIframe('https://n8n.typebot.pro/webhook/dashboard');\n    };\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1080,-1200],"id":"25599c9a-04b4-4fef-a968-07c835b564f2","name":"HTML"},{"parameters":{"path":"santobet","responseMode":"responseNode","options":{}},"id":"b64ddc7a-cb0f-4550-8adb-2848a0d7b507","name":"Serve Frontend2","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,-1200],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1300,-1200],"id":"48c424a7-c803-4e41-9f6c-d59c49e1ef76","name":"Respond to Webhook2"},{"parameters":{"content":"## DASHBOARD - PAINEL\nACESSO INICIAL","height":340,"width":720,"color":4},"type":"n8n-nodes-base.stickyNote","position":[820,-1320],"typeVersion":1,"id":"4f65101f-ea55-486d-9f1e-d8cbd95e9b08","name":"Sticky Note"},{"parameters":{"content":"## DASHBOARD jogadores\nEXIBE DADOS GERAIS Dos jogadores","height":340,"width":1320,"color":4},"type":"n8n-nodes-base.stickyNote","position":[820,-600],"typeVersion":1,"id":"52566dd3-7118-418a-a992-01ff4f762a56","name":"Sticky Note8"},{"parameters":{"path":"SBjogadores","responseMode":"responseNode","options":{}},"id":"1631769b-0812-43a2-930c-b43622e31f91","name":"Serve Frontend1","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,-480],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1940,-480],"id":"a82016c6-c432-42fd-9382-6a3f4be4afb8","name":"Respond to Webhook"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"JOGADOR","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=0"},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1080,-480],"id":"8bea3852-ea46-4e4a-a13d-4abbe58212da","name":"SBjogadores","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"assignments":{"assignments":[{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"email","value":"={{ $json.EMAIL }}","type":"string"},{"id":"55e37a3a-9ae1-483d-a48d-e3b871d47dc1","name":"telefone","value":"={{ $json.TELEFONE }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json.DATA }}","type":"string"},{"id":"7688426f-e976-4a7a-bfc5-c101c0d0dc42","name":"afiliado","value":"={{ $json.AFILIADO }}","type":"string"},{"id":"3c4fa2f5-78be-4802-8789-c2729f422062","name":"smsenviado","value":"={{ $json['BOAS VINDAS ENVIADAS'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1300,-480],"id":"62b158b6-0cfb-4be5-8c3d-f6f683c495e4","name":"dados"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Jogadores</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todos os Jogadores</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Email</th>\n        <th>Telefone</th>\n        <th>Data</th>\n        <th>Afiliado</th>\n        <th>SMS Enviado</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.email || 'N/A'}</td>\n        <td>${dados.telefone || 'N/A'}</td>\n        <td>${dados.data || 'N/A'}</td>\n        <td>${dados.afiliado || 'Nenhum'}</td>\n        <td>${dados.smsenviado || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1540,-480],"id":"23a285fb-4fa0-4f6d-8f72-28c27ae45695","name":"Code"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Jogadores</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1740,-480],"id":"eb9c5092-9163-4ce7-b9e6-240905ec0a35","name":"HTML4"},{"parameters":{"content":"## DASHBOARD AFILIADOS\nEXIBE DADOS GERAIS Dos jogadores","height":340,"width":1320,"color":4},"type":"n8n-nodes-base.stickyNote","position":[820,-240],"typeVersion":1,"id":"8a6dfc98-0647-437b-ae7a-dfaae3632807","name":"Sticky Note9"},{"parameters":{"path":"SBafiliados","responseMode":"responseNode","options":{}},"id":"95289604-f10a-4fb9-a760-78fea1ca9ae2","name":"Serve Frontend3","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,-120],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1940,-120],"id":"022918be-7989-46b3-91e1-76f4506bd89b","name":"Respond to Webhook3"},{"parameters":{"assignments":{"assignments":[{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"email","value":"={{ $json.EMAIL }}","type":"string"},{"id":"55e37a3a-9ae1-483d-a48d-e3b871d47dc1","name":"telefone","value":"={{ $json.TELEFONE }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json['DATA DA AFILIAÇÃO'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1300,-120],"id":"34bf15ac-3621-480d-9dbc-4d5fd58e719b","name":"dados1"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todos os Afiliados</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Email</th>\n        <th>Telefone</th>\n        <th>Data da Afiliação</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.email || 'N/A'}</td>\n        <td>${dados.telefone || 'N/A'}</td>\n        <td>${dados.data || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1540,-120],"id":"d3300c31-f1d1-4a2b-9142-e9949a59d4aa","name":"Code1"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <h1>Lista de Afiliados</h1>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"primeiraPagina()\">⏮ Primeira</button>\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <button onclick=\"ultimaPagina()\">Última ⏭</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const linhasFiltradas = Array.from(linhas).filter(linha =>\n        linha.cells[0]?.textContent.toLowerCase().includes(termoFiltro)\n      );\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhas.forEach(linha => linha.style.display = \"none\");\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const linhas = Array.from(document.querySelectorAll(\"tbody tr\")).filter(l =>\n        l.cells[0]?.textContent.toLowerCase().includes(termoFiltro)\n      );\n      const totalPaginas = Math.ceil(linhas.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function primeiraPagina() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    function ultimaPagina() {\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const linhas = Array.from(document.querySelectorAll(\"tbody tr\")).filter(l =>\n        l.cells[0]?.textContent.toLowerCase().includes(termoFiltro)\n      );\n      const totalPaginas = Math.ceil(linhas.length / linhasPorPagina);\n      paginaAtual = totalPaginas;\n      atualizarTabela();\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1740,-120],"id":"331e7d7a-3dc3-47cd-a7fb-435600205aaa","name":"HTML6"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":571374243,"mode":"list","cachedResultName":"AFILIADOS","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=571374243"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1080,-120],"id":"eeb32d79-13f5-41f2-b524-200165c37e45","name":"SBafiliados","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"content":"## DASHBOARD DESPESAS\nEXIBE DADOS GERAIS DAS DESPESAS","height":460,"width":1320,"color":7},"type":"n8n-nodes-base.stickyNote","position":[820,120],"typeVersion":1,"id":"5df25948-b43a-44e3-926e-304ae792ef9c","name":"Sticky Note10"},{"parameters":{"path":"SBdespesas","responseMode":"responseNode","options":{}},"id":"5547b55c-ad3d-4271-9d0e-e5c4d8328345","name":"Serve Frontend4","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,240],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1940,240],"id":"4e349206-49b2-43a8-89ff-94e2e686148f","name":"Respond to Webhook4"},{"parameters":{"assignments":{"assignments":[{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"descricao","value":"={{ $json['DESCRIÇÃO'] }}","type":"string"},{"id":"55e37a3a-9ae1-483d-a48d-e3b871d47dc1","name":"valor","value":"={{ $json.VALOR }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json.DATA }}","type":"string"},{"id":"69db7032-8ef9-43b9-bbb4-1cea1f569000","name":"status","value":"={{ $json.STATUS }}","type":"string"},{"id":"ce88a79c-071f-487f-9e51-cc99cd3dbf9b","name":"pagarpara","value":"={{ $json['PAGAR A'] }}","type":"string"},{"id":"4735a4e6-4147-4149-be65-a4f321c9853f","name":"pagoem","value":"={{ $json['PAGO EM'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1300,240],"id":"e41ac953-fc26-4e1e-bd76-ef229aa7edee","name":"dados2"},{"parameters":{"jsCode":"const registros = $input.all();\n\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Despesas</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    select {\n      background-color: #1e2a38;\n      color: #f1f1f1;\n      border: 1px solid #2c3e50;\n      padding: 5px;\n      border-radius: 4px;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todas as despesas</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Descrição</th>\n        <th>Valor</th>\n        <th>Data</th>\n        <th>Status</th>\n        <th>Recebedor</th>\n        <th>Pago Em</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach((registro, index) => {\n  const dados = registro.json;\n  const rowIndex = index + 2;\n\n  // Captura o status de forma robusta\n  const statusOriginal = dados.status || dados.Status || dados[\"status \"] || dados[\"STATUS\"] || 'aguardando pagamento';\n  const status = statusOriginal.toString().trim().toLowerCase();\n\n  html += `\n    <tr>\n      <td>${dados.descricao || 'N/A'}</td>\n      <td>${dados.valor || 'N/A'}</td>\n      <td>${dados.data || 'N/A'}</td>\n      <td>\n        <select data-index=\"${rowIndex}\" onchange=\"atualizarStatus(this)\">\n          <option value=\"AGUARDANDO PAGAMENTO\" ${status === 'aguardando pagamento' ? 'selected' : ''}>AGUARDANDO PAGAMENTO</option>\n          <option value=\"PAGO\" ${status === 'pago' ? 'selected' : ''}>PAGO</option>\n          <option value=\"CRÉDITO\" ${status === 'crédito' ? 'selected' : ''}>CRÉDITO</option>\n        </select>\n      </td>\n      <td>${dados.pagarpara || 'N/A'}</td>\n      <td>${dados.pagoem || 'N/A'}</td>\n    </tr>\n  `;\n});\n\nhtml += `\n    </tbody>\n  </table>\n\n  <script>\n    async function atualizarStatus(selectElement) {\n      const rowIndex = selectElement.getAttribute('data-index');\n      const novoStatus = selectElement.value;\n\n      try {\n        const resposta = await fetch('/webhook/atualizar-status', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            rowIndex: rowIndex,\n            novoStatus: novoStatus\n          })\n        });\n\n        if (resposta.ok) {\n          alert('Status atualizado com sucesso!');\n        } else {\n          alert('Erro ao atualizar status.');\n        }\n      } catch (erro) {\n        alert('Erro de conexão: ' + erro.message);\n      }\n    }\n  </script>\n</body>\n</html>\n`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1500,240],"id":"2a720976-e213-4563-a1ac-1da95f0ddb4b","name":"Code2"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>DESPESAS</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por Despesa:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite descrição\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1720,240],"id":"5c6c3026-4161-42a2-9966-e819c1594bc4","name":"HTML7"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1994659400,"mode":"list","cachedResultName":"DESPESAS","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1994659400"},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1080,240],"id":"b18b25bf-5e4a-4100-a43e-068d47c8fae2","name":"SBdespesas","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Dashboard Santobet</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n      padding: 20px;\n    }\n\n    h1 {\n      text-align: center;\n      background-color: #00bcd4;\n      color: #000;\n      padding: 15px;\n      border-radius: 10px;\n      font-size: 24px;\n    }\n\n    h2 {\n      margin-top: 40px;\n      color: #00bcd4;\n      border-bottom: 2px solid #00bcd4;\n      padding-bottom: 5px;\n    }\n\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 15px;\n      justify-content: space-between;\n    }\n\n    .card {\n      background-color: #1e2a38;\n      padding: 15px;\n      flex: 1 0 22%;\n      border-radius: 12px;\n      border: 1px solid #00bcd4;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n      transition: transform 0.2s ease;\n    }\n\n    .card:hover {\n      transform: scale(1.03);\n    }\n\n    .card h3 {\n      color: #a8dadc;\n      font-size: 14px;\n      margin: 0 0 5px 0;\n      font-weight: 500;\n    }\n\n    .card p {\n      font-size: 20px;\n      font-weight: bold;\n      color: #f1faee;\n      margin: 0;\n    }\n\n    .chart {\n      background-color: #264653;\n      padding: 20px;\n      margin-top: 20px;\n      border-radius: 10px;\n    }\n  </style>\n</head>\n<body>\n  <h1>DASHBOARD SANTOBET - DATA {{ new Date().toLocaleDateString('pt-BR') }}</h1>\n\n  <h2>DADOS GERAIS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>N° JOGADORES</h3><p>{{ $json[\"data\"][2][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>N° AFILIADOS</h3><p>{{ $json[\"data\"][4][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>N° PIX GERADOS</h3><p>{{ $json[\"data\"][7][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>RECEITA TOTAL</h3><p>{{ $json[\"data\"][13][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>SAÍDA TOTAL</h3><p>{{ $json[\"data\"][15][\"DASHBOARD SANTOBET\"] }}</p></div>\n    <div class=\"card\"><h3>SALDO BSPAY</h3><p>{{ $json[\"data\"][17][\"DASHBOARD SANTOBET\"] }}</p></div>\n  </div>\n\n  <h2>SAQUES</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>SAQUES JOGADOR</h3><p>{{ $json[\"data\"][2][\"col_3\"] }}</p></div>\n    <div class=\"card\"><h3>SAQUE AFILIADOS</h3><p>{{ $json[\"data\"][4][\"col_3\"] }}</p></div>\n  </div>\n\n  <h2>DADOS ÚLTIMAS 24 HORAS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>N° JOGADORES 24H</h3><p>{{ $json.data[11].col_5 }}</p></div>\n    <div class=\"card\"><h3>N° AFILIADOS 24H</h3><p>{{ $json.data[13].col_5 }}</p></div>\n    <div class=\"card\"><h3>DEPÓSITOS 24H</h3><p>{{ $json.data[9].col_5 }}</p></div>\n    <div class=\"card\"><h3>SAQUES JOGADOR 24H</h3><p>{{ $json.data[7].col_5 }}</p></div>\n    <div class=\"card\"><h3>SAQUES AFILIADO 24H</h3><p>{{ $json.data[4].col_5 }}</p></div>\n    <div class=\"card\"><h3>SAQUES TOTAL 24H</h3><p>{{ $json.data[2].col_5 }}</p></div>\n  </div>\n\n  <h2>DESPESAS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>GGR PAGO</h3><p>{{ $json.data[2].col_9 }}</p></div>\n    <div class=\"card\"><h3>DESPESAS DIVERSAS</h3><p>{{ $json.data[4].col_9 }}</p></div>\n  </div>\n\n  <h2>MÉTRICAS FINAIS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>DEPÓSITO MÉDIO</h3><p>{{ $json.data[7].col_3 }}</p></div>\n    <div class=\"card\"><h3>% PIX PAGOS</h3><p>{{ $json.data[9].col_3 }}</p></div>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1620,-1120],"id":"e8ff3f89-6025-4487-859e-6f884b73680b","name":"HTML3"},{"parameters":{"content":"## SAQUES AFILIADOS\nEXIBE DADOS GERAIS Dos jogadores","height":340,"width":1320,"color":5},"type":"n8n-nodes-base.stickyNote","position":[2160,-960],"typeVersion":1,"id":"c31ca47a-e0a8-498b-9fa9-3a7b91d6e6de","name":"Sticky Note11"},{"parameters":{"path":"SBsaqueafiliados","responseMode":"responseNode","options":{}},"id":"8cd9a5e9-f51b-4b64-b037-1a3598e51521","name":"Serve Frontend5","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[2200,-840],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[3300,-840],"id":"7eaf7763-8fd0-457e-8bb8-202d71b8d7d5","name":"Respond to Webhook5"},{"parameters":{"assignments":{"assignments":[{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"email","value":"={{ $json.EMAIL }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json.DATA }}","type":"string"},{"id":"f4ae8c71-2a05-47b3-8d00-e47a76c45e8d","name":"valor","value":"={{ $json.VALOR }}","type":"string"},{"id":"f232bd79-e12f-4a84-8e23-639cc54fe653","name":"txbspay","value":"={{ $json['TAXA BSPAY'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2640,-840],"id":"f96e6aa3-3cdd-4930-b6cd-c857247b57a1","name":"dados3"},{"parameters":{"jsCode":"const registros = $input.all();\n\nlet linhas = \"\";\n\nregistros.forEach(registro => {\n  const dados = registro.json;\n\n  linhas += `\n    <tr>\n      <td>${dados.email || 'N/A'}</td>\n      <td>${dados.data || 'N/A'}</td>\n      <td>${dados.valor || 'N/A'}</td>\n      <td>${dados.txbspay || 'N/A'}</td>\n    </tr>\n  `;\n});\n\nreturn [{ json: { htmlBody: linhas } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2880,-840],"id":"630bb110-bab1-45ec-b8a0-a5f5d0062f77","name":"Code3"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Saques Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n      cursor: pointer;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <h1>Saques Afiliados</h1>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table id=\"tabelaSaques\">\n    <thead>\n      <tr>\n        <th>Email</th>\n        <th onclick=\"ordenarPorData()\">Data ⬍</th>\n        <th>Valor</th>\n        <th>Taxa BsPay</th>\n      </tr>\n    </thead>\n    <tbody>\n      {{ $json.htmlBody }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"primeiraPagina()\">⏮ Primeira</button>\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <button onclick=\"ultimaPagina()\">Última ⏭</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Script -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n    let ordemAscendente = true;\n\n    function atualizarTabela() {\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const linhas = Array.from(document.querySelectorAll(\"tbody tr\"));\n      let linhasFiltradas = linhas.filter(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        return email.includes(termoFiltro);\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhas.forEach(linha => linha.style.display = \"none\");\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = Array.from(document.querySelectorAll(\"tbody tr\")).filter(linha =>\n        linha.cells[0]?.textContent.toLowerCase().includes(document.getElementById(\"filtroEmail\").value.toLowerCase())\n      );\n      const totalPaginas = Math.ceil(linhas.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function primeiraPagina() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    function ultimaPagina() {\n      const linhas = Array.from(document.querySelectorAll(\"tbody tr\")).filter(linha =>\n        linha.cells[0]?.textContent.toLowerCase().includes(document.getElementById(\"filtroEmail\").value.toLowerCase())\n      );\n      const totalPaginas = Math.ceil(linhas.length / linhasPorPagina);\n      paginaAtual = totalPaginas;\n      atualizarTabela();\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    function ordenarPorData() {\n      const tbody = document.querySelector(\"tbody\");\n      const linhas = Array.from(tbody.querySelectorAll(\"tr\"));\n\n      linhas.sort((a, b) => {\n        const dataA = normalizarData(a.cells[1].textContent);\n        const dataB = normalizarData(b.cells[1].textContent);\n        return ordemAscendente ? dataA - dataB : dataB - dataA;\n      });\n\n      ordemAscendente = !ordemAscendente;\n      linhas.forEach(linha => tbody.appendChild(linha));\n      atualizarTabela();\n    }\n\n    function normalizarData(dataStr) {\n      if (!dataStr || dataStr.trim() === \"\") return new Date(0); // segurança para campos vazios\n      const partes = dataStr.split(\" - \");\n      if (partes.length !== 2) return new Date(0); // formato inesperado\n\n      const [dia, mes, ano] = partes[0].split(\"-\").map(s => parseInt(s, 10));\n      const horaMinuto = partes[1].trim(); // \"HH:MM\"\n      return new Date(`${ano}-${String(mes).padStart(2, \"0\")}-${String(dia).padStart(2, \"0\")}T${horaMinuto}`);\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[3100,-840],"id":"a37f2206-4a3e-4437-afcd-9eb9df68b2f5","name":"HTML8"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1387268248,"mode":"list","cachedResultName":"SAQUES","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1387268248"},"filtersUI":{"values":[{"lookupColumn":"AFILIADO S/N","lookupValue":"AFILIADO"}]},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2420,-840],"id":"0fef4c98-731d-474a-a035-8431a15b0b49","name":"SBafiliados1","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"content":"## SAQUES JOGADOR\nEXIBE DADOS GERAIS Dos jogadores","height":340,"width":1320,"color":5},"type":"n8n-nodes-base.stickyNote","position":[2160,-600],"typeVersion":1,"id":"d7f72331-fe7f-4d42-b8b5-b6d8dd2ed9d8","name":"Sticky Note12"},{"parameters":{"path":"SBsaquejogador","responseMode":"responseNode","options":{}},"id":"bcf83178-380d-487c-8200-c1e1b23fe84b","name":"Serve Frontend6","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[2200,-480],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[3300,-480],"id":"e5634eca-cc1b-4035-bd58-0046c0416b58","name":"Respond to Webhook6"},{"parameters":{"assignments":{"assignments":[{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"email","value":"={{ $json.EMAIL }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json.DATA }}","type":"string"},{"id":"f4ae8c71-2a05-47b3-8d00-e47a76c45e8d","name":"valor","value":"={{ $json.VALOR }}","type":"string"},{"id":"f232bd79-e12f-4a84-8e23-639cc54fe653","name":"txbspay","value":"={{ $json['TAXA BSPAY'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2640,-480],"id":"1d8be5f0-6255-4a7d-883e-6530fadf93d8","name":"dados4"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de SAQUES JOGADOR</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Saques Jogador</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Email</th>\n        <th>Data</th>\n        <th>Valor</th>\n        <th>Taxa BsPay</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.email || 'N/A'}</td>\n        <td>${dados.data || 'N/A'}</td>\n        <td>${dados.valor || 'N/A'}</td>\n        <td>${dados.txbspay || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2880,-480],"id":"ababe2e3-8c35-4aaf-bf01-4bd6bc93be51","name":"Code4"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Saques Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"primeiraPagina()\">Primeira</button>\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <button onclick=\"ultimaPagina()\">Última</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function primeiraPagina() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    function ultimaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      paginaAtual = totalPaginas;\n      atualizarTabela();\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[3100,-480],"id":"ed1bc5e1-2bbc-416b-8ea9-f2cf13e0611c","name":"HTML9"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1387268248,"mode":"list","cachedResultName":"SAQUES","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1387268248"},"filtersUI":{"values":[{"lookupColumn":"AFILIADO S/N"}]},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2420,-480],"id":"2f4f7f7a-1d65-4164-8480-facf142c7771","name":"SBafiliados2","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"jsCode":"const registros = $input.all();\n\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n      cursor: pointer;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Saques Afiliados</h1>\n  <table id=\"tabela\">\n    <thead>\n      <tr>\n        <th>Email</th>\n        <th onclick=\"ordenarPorData()\">Data &#x21C5;</th>\n        <th>Valor</th>\n        <th>Taxa BsPay</th>\n      </tr>\n    </thead>\n    <tbody id=\"corpo-tabela\">\n`;\n\n// Adiciona as linhas\nregistros.forEach(registro => {\n  const dados = registro.json;\n  html += `\n    <tr>\n      <td>${dados.email || 'N/A'}</td>\n      <td>${dados.data || 'N/A'}</td>\n      <td>${dados.valor || 'N/A'}</td>\n      <td>${dados.txbspay || 'N/A'}</td>\n    </tr>\n  `;\n});\n\nhtml += `\n    </tbody>\n  </table>\n\n  <script>\n    let crescente = true;\n\n    function ordenarPorData() {\n      const tabela = document.getElementById(\"tabela\");\n      const corpo = document.getElementById(\"corpo-tabela\");\n      const linhas = Array.from(corpo.querySelectorAll(\"tr\"));\n\n      linhas.sort((a, b) => {\n        const dataA = new Date(a.cells[1].innerText);\n        const dataB = new Date(b.cells[1].innerText);\n        return crescente ? dataB - dataA : dataA - dataB;\n      });\n\n      corpo.innerHTML = \"\";\n      linhas.forEach(linha => corpo.appendChild(linha));\n      crescente = !crescente;\n    }\n  </script>\n</body>\n</html>\n`;\n\nreturn [{ json: { html: html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2920,-1120],"id":"dcbba7a6-0119-4dec-a746-1dca5a71e181","name":"Code5"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Saques Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[3140,-1120],"id":"7713ae5b-9baf-49fd-babb-43ca03a4b893","name":"HTML10"},{"parameters":{"content":"## DESPESAS GGR\nEXIBE DADOS GERAIS DAS DESPESAS DE GGR","height":460,"width":1320,"color":7},"type":"n8n-nodes-base.stickyNote","position":[820,600],"typeVersion":1,"id":"25e74586-5d24-4dd8-9240-5be1f67cfb2f","name":"Sticky Note13"},{"parameters":{"path":"SBggr","responseMode":"responseNode","options":{}},"id":"11a4d42d-55cc-4aed-a1aa-51e6e3ccfb23","name":"Serve Frontend7","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,720],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1940,720],"id":"c31b5152-fe6e-413e-966f-ef9b2f45900f","name":"Respond to Webhook7"},{"parameters":{"assignments":{"assignments":[{"id":"55e37a3a-9ae1-483d-a48d-e3b871d47dc1","name":"valor","value":"={{ $json.VALOR }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json['DATA - HORA'] }}","type":"string"},{"id":"69db7032-8ef9-43b9-bbb4-1cea1f569000","name":"status","value":"={{ $json.STATUS }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1300,720],"id":"9eb7676e-7e9d-49ff-98fa-9b97eb3ea4b1","name":"dados5"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>GGR</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    select {\n      background-color: #1e2a38;\n      color: #f1f1f1;\n      border: 1px solid #2c3e50;\n      padding: 5px;\n      border-radius: 4px;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todas as despesas com GGR</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Data</th>\n        <th>Valor</th>\n        <th>Status</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach((registro, index) => {\n  const dados = registro.json;\n  const rowIndex = index + 2; // Supondo linha 1 como cabeçalho\n\n  const statusAtual = (dados.status || '').toLowerCase();\n\n  html += `\n    <tr>\n      <td>${dados.data || 'N/A'}</td>\n      <td>${dados.valor || 'N/A'}</td>\n      <td>\n        <select data-index=\"${rowIndex}\" onchange=\"atualizarStatus(this)\">\n          <option value=\"AGUARDANDO PAGAMENTO\" ${statusAtual === 'aguardando pagamento' ? 'selected' : ''}>AGUARDANDO PAGAMENTO</option>\n          <option value=\"PAGO\" ${statusAtual === 'pago' ? 'selected' : ''}>PAGO</option>\n          <option value=\"CRÉDITO\" ${statusAtual === 'crédito' ? 'selected' : ''}>CRÉDITO</option>\n        </select>\n      </td>\n    </tr>\n  `;\n});\n\nhtml += `\n    </tbody>\n  </table>\n\n  <script>\n    async function atualizarStatus(selectElement) {\n      const rowIndex = selectElement.getAttribute('data-index');\n      const novoStatus = selectElement.value;\n\n      try {\n        const resposta = await fetch('/webhook/atualizar-statusggr', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            rowIndex: rowIndex,\n            novoStatus: novoStatus\n          })\n        });\n\n        if (resposta.ok) {\n          alert('Status atualizado com sucesso!');\n        } else {\n          alert('Erro ao atualizar status.');\n        }\n      } catch (erro) {\n        alert('Erro de conexão: ' + erro.message);\n      }\n    }\n  </script>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1500,720],"id":"715cc860-3731-40b7-9b73-65219bb4d270","name":"Code6"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>DESPESAS GGR</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por Despesa:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite descrição\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"primeiraPagina()\">Primeira</button>\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <button onclick=\"ultimaPagina()\">Última</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function primeiraPagina() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    function ultimaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      paginaAtual = totalPaginas;\n      atualizarTabela();\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1720,720],"id":"517ffef5-59ac-4c9c-b8d6-e50d41b9ec7e","name":"HTML11"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1756964246,"mode":"list","cachedResultName":"GGR PAGO","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1756964246"},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1080,720],"id":"0d2af1ba-82fd-474b-862e-2ab2753371c4","name":"SBdespesas1","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"content":"## DEPOSITOS PAGOS\nEXIBE DADOS GERAIS Dos jogadores","height":340,"width":1320,"color":5},"type":"n8n-nodes-base.stickyNote","position":[2160,-240],"typeVersion":1,"id":"8c0693ef-f452-43ab-8e60-cda1929d7466","name":"Sticky Note14"},{"parameters":{"path":"SBdepositos","responseMode":"responseNode","options":{}},"id":"d173c2df-861b-44f4-ba17-ceabd2b68877","name":"Serve Frontend8","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[2200,-120],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[3300,-120],"id":"14aa74fa-e7c3-4e69-9c7d-8b5a5fbfbbf1","name":"Respond to Webhook8"},{"parameters":{"assignments":{"assignments":[{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"email","value":"={{ $json.EMAIL }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json.DATA }}","type":"string"},{"id":"f4ae8c71-2a05-47b3-8d00-e47a76c45e8d","name":"telefone","value":"={{ $json.TELEFONE }}","type":"string"},{"id":"f232bd79-e12f-4a84-8e23-639cc54fe653","name":"valor","value":"={{ $json[' VALOR '] }}","type":"string"},{"id":"d0155e4f-865f-4992-ba16-bc3f55205895","name":"txbspay","value":"={{ $json['TAXA BSPAY'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2640,-120],"id":"3aa75c9f-574c-4a6b-9b41-dddacfbbdf59","name":"dados6"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de SAQUES JOGADOR</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Saques Jogador</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Email</th>\n        <th>Data</th>\n        <th>Telefone</th>\n        <th>Valor</th>\n        <th>Taxa BsPay</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.email || 'N/A'}</td>\n        <td>${dados.data || 'N/A'}</td>\n        <td>${dados.telefone || 'N/A'}</td>\n        <td>${dados.valor || 'N/A'}</td>\n        <td>${dados.txbspay || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2880,-120],"id":"a8ce62c7-bead-42b1-98a3-cc2214caf574","name":"Code7"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Saques Afiliados</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Paginação -->\n  <div class=\"paginacao\">\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Próxima</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `Página ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[3100,-120],"id":"8d35572f-9561-4587-9dd5-68503fa28a9e","name":"HTML12"},{"parameters":{"documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1427298924,"mode":"list","cachedResultName":"DEPOSITO PAGO","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1427298924"},"options":{"outputFormatting":{"values":{"general":"FORMATTED_VALUE","date":"FORMATTED_STRING"}}}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2420,-120],"id":"0dad8bd4-0235-4c0e-89d4-2374e272f503","name":"SBafiliados3","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"httpMethod":"POST","path":"atualizar-status","options":{}},"id":"fd2cf427-bae0-45de-a4dc-ff3efbf1ddac","name":"EntradaStatus","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[1720,420],"webhookId":"8f0e00f6-19fc-4cb4-9589-d98d5b41d333"},{"parameters":{"operation":"update","documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1994659400,"mode":"list","cachedResultName":"DESPESAS","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1994659400"},"columns":{"mappingMode":"defineBelow","value":{"row_number":"={{ $json.body.rowIndex }}","STATUS":"={{ $json.body.novoStatus }}"},"matchingColumns":["row_number"],"schema":[{"id":"DESCRIÇÃO","displayName":"DESCRIÇÃO","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"VALOR","displayName":"VALOR","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"DATA","displayName":"DATA","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"STATUS","displayName":"STATUS","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"PAGO EM","displayName":"PAGO EM","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"CHAVE","displayName":"CHAVE","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"row_number","displayName":"row_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"readOnly":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"6c784693-db6b-4c9f-9390-50e2e54830ce","name":"Atualizar Planilha","type":"n8n-nodes-base.googleSheets","typeVersion":4,"position":[1940,420],"credentials":{"googleSheetsOAuth2Api":{"id":"9W9MbbOmOV6F5Huv","name":"N8N - SHEET"}}},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Despesas</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todas as despesas</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Descrição</th>\n        <th>Valor</th>\n        <th>Data</th>\n        <th>Status</th>\n        <th>Pago Em</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.descricao || 'N/A'}</td>\n        <td>${dados.valor || 'N/A'}</td>\n        <td>${dados.data || 'N/A'}</td>\n        <td>${dados.status || 'N/A'}</td>\n        <td>${dados.pagoem || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1440,420],"id":"bc56865f-91b6-425d-95f2-944d4cb4c503","name":"Code8"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>GGR</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todas as despesas com ggr</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>Data</th>\n        <th>Valor</th>\n        <th>Status</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.data || 'N/A'}</td>\n        <td>${dados.valor || 'N/A'}</td>\n        <td>${dados.status || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1400,900],"id":"e0243130-3497-43e8-acef-83a02da2fddb","name":"Code9"},{"parameters":{"operation":"update","documentId":{"__rl":true,"value":"1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME","mode":"list","cachedResultName":"SANTOBET - WEBHOOK","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1756964246,"mode":"list","cachedResultName":"GGR PAGO","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1gkiZcv4TIQVnSZTyGz6kzO3T-sACsUeDgGMXvOInhME/edit#gid=1756964246"},"columns":{"mappingMode":"defineBelow","value":{"row_number":"={{ $json.body.rowIndex }}","STATUS":"={{ $json.body.novoStatus }}"},"matchingColumns":["row_number"],"schema":[{"id":"DESCRIÇÃO","displayName":"DESCRIÇÃO","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"VALOR","displayName":"VALOR","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"DATA","displayName":"DATA","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"STATUS","displayName":"STATUS","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"PAGO EM","displayName":"PAGO EM","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"CHAVE","displayName":"CHAVE","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"row_number","displayName":"row_number","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"readOnly":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"5a213876-c75f-4acb-ac64-81b5673c4f7c","name":"Atualizar Planilha1","type":"n8n-nodes-base.googleSheets","typeVersion":4,"position":[1940,880],"credentials":{"googleSheetsOAuth2Api":{"id":"9W9MbbOmOV6F5Huv","name":"N8N - SHEET"}}},{"parameters":{"httpMethod":"POST","path":"atualizar-statusggr","options":{}},"id":"f3148f09-9492-4e99-8e90-8612cab74934","name":"EntradaStatusggr","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[1720,880],"webhookId":"8f0e00f6-19fc-4cb4-9589-d98d5b41d333"}],"connections":{"Google Sheets":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"HTML1","type":"main","index":0}]]},"Serve Frontend":{"main":[[{"node":"Google Sheets","type":"main","index":0}]]},"HTML1":{"main":[[{"node":"Respond to Webhook1","type":"main","index":0}]]},"Serve Frontend2":{"main":[[{"node":"HTML","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Respond to Webhook2","type":"main","index":0}]]},"Serve Frontend1":{"main":[[{"node":"SBjogadores","type":"main","index":0}]]},"SBjogadores":{"main":[[{"node":"dados","type":"main","index":0}]]},"dados":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"HTML4","type":"main","index":0}]]},"HTML4":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Serve Frontend3":{"main":[[{"node":"SBafiliados","type":"main","index":0}]]},"dados1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"HTML6","type":"main","index":0}]]},"HTML6":{"main":[[{"node":"Respond to Webhook3","type":"main","index":0}]]},"SBafiliados":{"main":[[{"node":"dados1","type":"main","index":0}]]},"Serve Frontend4":{"main":[[{"node":"SBdespesas","type":"main","index":0}]]},"dados2":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Code2":{"main":[[{"node":"HTML7","type":"main","index":0}]]},"HTML7":{"main":[[{"node":"Respond to Webhook4","type":"main","index":0}]]},"SBdespesas":{"main":[[{"node":"dados2","type":"main","index":0}]]},"Serve Frontend5":{"main":[[{"node":"SBafiliados1","type":"main","index":0}]]},"dados3":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Code3":{"main":[[{"node":"HTML8","type":"main","index":0}]]},"HTML8":{"main":[[{"node":"Respond to Webhook5","type":"main","index":0}]]},"SBafiliados1":{"main":[[{"node":"dados3","type":"main","index":0}]]},"Serve Frontend6":{"main":[[{"node":"SBafiliados2","type":"main","index":0}]]},"dados4":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Code4":{"main":[[{"node":"HTML9","type":"main","index":0}]]},"HTML9":{"main":[[{"node":"Respond to Webhook6","type":"main","index":0}]]},"SBafiliados2":{"main":[[{"node":"dados4","type":"main","index":0}]]},"Code5":{"main":[[{"node":"HTML10","type":"main","index":0}]]},"Serve Frontend7":{"main":[[{"node":"SBdespesas1","type":"main","index":0}]]},"dados5":{"main":[[{"node":"Code6","type":"main","index":0}]]},"Code6":{"main":[[{"node":"HTML11","type":"main","index":0}]]},"HTML11":{"main":[[{"node":"Respond to Webhook7","type":"main","index":0}]]},"SBdespesas1":{"main":[[{"node":"dados5","type":"main","index":0}]]},"Serve Frontend8":{"main":[[{"node":"SBafiliados3","type":"main","index":0}]]},"dados6":{"main":[[{"node":"Code7","type":"main","index":0}]]},"Code7":{"main":[[{"node":"HTML12","type":"main","index":0}]]},"HTML12":{"main":[[{"node":"Respond to Webhook8","type":"main","index":0}]]},"SBafiliados3":{"main":[[{"node":"dados6","type":"main","index":0}]]},"Respond to Webhook1":{"main":[[]]},"EntradaStatus":{"main":[[{"node":"Atualizar Planilha","type":"main","index":0}]]},"EntradaStatusggr":{"main":[[{"node":"Atualizar Planilha1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"3540013c-02b3-4669-a5b9-bc6816e5b340","triggerCount":11,"tags":[{"createdAt":"2025-03-06T17:18:48.721Z","updatedAt":"2025-03-06T17:18:48.721Z","id":"BjJH7wIAM5snchbM","name":"SANTOBET"}]}