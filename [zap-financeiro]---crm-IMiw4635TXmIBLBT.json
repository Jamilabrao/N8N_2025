{"createdAt":"2025-04-10T19:07:54.137Z","updatedAt":"2025-08-01T04:48:26.303Z","id":"IMiw4635TXmIBLBT","name":"[ZAP FINANCEIRO] - CRM","active":false,"isArchived":false,"nodes":[{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[1560,-780],"id":"79e8e078-8b0b-492a-94a7-c7bf5de5e28b","name":"Aggregate"},{"parameters":{"content":"## DASHBOARD GERAL\nEXIBE DADOS GERAIS DA OPERA칂츾O","height":340,"width":1320,"color":6},"type":"n8n-nodes-base.stickyNote","position":[820,-620],"typeVersion":1,"id":"dfa797c3-4244-4b2d-8f31-892e0928a2be","name":"Sticky Note7"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Dashboard ZAP FINANCEIRO</title>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n      padding: 20px;\n    }\n\n    h1 {\n      text-align: center;\n      background-color: #00bcd4;\n      color: #000;\n      padding: 12px;\n      border-radius: 10px;\n      font-size: 24px;\n    }\n\n    h2 {\n      margin-top: 30px;\n      color: #00bcd4;\n      border-bottom: 2px solid #00bcd4;\n      padding-bottom: 5px;\n      font-size: 18px; /* Define o tamanho da fonte */\n    }\n\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 15px;\n      justify-content: space-between;\n    }\n\n    .card {\n      background-color: #1e2a38;\n      padding: 15px;\n      flex: 1 0 22%;\n      border-radius: 12px;\n      border: 1px solid #00bcd4;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n      transition: transform 0.2s ease;\n    }\n\n    .card:hover {\n      transform: scale(1.03);\n    }\n\n    .card h3 {\n      color: #a8dadc;\n      font-size: 14px;\n      margin: 0 0 5px 0;\n      font-weight: 500;\n    }\n\n    .card p {\n      font-size: 20px;\n      font-weight: bold;\n      color: #f1faee;\n      margin: 0;\n    }\n\n    .charts-row {\n      display: flex;\n      justify-content: center;\n      gap: 40px;\n      margin-top: 30px;\n      flex-wrap: wrap;\n    }\n\n    .chart-box {\n      background-color: #264653;\n      padding: 20px;\n      border-radius: 10px;\n      width: 320px;\n      height: 340px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    canvas {\n      width: 300px !important;\n      height: 300px !important;\n    }\n  </style>\n</head>\n<body>\n  <h1>DASHBOARD ZAP FINANCEIRO - DATA {{ new Date().toLocaleDateString('pt-BR') }}</h1>\n\n  <h2>DADOS GERAIS</h2>{{ $json.data[0].CARGO }}\n  <div class=\"container\">\n    <div class=\"card\"><h3>N춿 ATIVOS</h3><p>{{ $json.data[0].ATIVOS }}</p></div>\n    <div class=\"card\"><h3>N춿 BLOQUEADOS</h3><p>{{ $json.data[0].BLOQUEADOS }}</p></div>\n    <div class=\"card\"><h3>N츾O ASSINANTES</h3><p>{{ $json.data[0]['N츾O ASSINANTES / TESTE'] }}</p></div>\n    <div class=\"card\"><h3>AGUARDANDO PAGAMENTO</h3><p>{{ $json.data[0]['AGUARDANDO PAGAMENTO'] }}</p></div>\n    <div class=\"card\"><h3>TOTAL</h3><p>{{ $json.data[0].TOTAL }}</p></div>\n    <div class=\"card\"><h3>ADMINISTRADORES</h3><p>{{ $json.data[0].ADM }}</p></div>\n  </div>\n\n  <h2>VENDAS PLATAFORMA</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>PERFECTPAY</h3><p>{{ $json.data[0].PERFECTPAY }}</p></div>\n    <div class=\"card\"><h3>LASTLINK</h3><p>{{ $json.data[0].LASTLINK }}</p></div>    \n  </div>\n\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1780,-780],"id":"77ec7aa4-57ad-4928-9857-558f5391f8e0","name":"HTML1"},{"parameters":{"path":"dashzapfinanceiro","responseMode":"responseNode","options":{}},"id":"a0588dd8-39b7-4932-925e-df6cacc08e2a","name":"Serve Frontend","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,-500],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>An치lise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>An치lise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para an치lise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da An치lise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: N칚o foi poss칤vel analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"1a9ade75-d2f3-42ad-9898-31b68cb9b486"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[2000,-780],"id":"7044e4c9-5c13-4594-92ef-87aee8179c23","name":"Respond to Webhook1"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Painel Principal - ZAP FINANCEIRO</title>\n  <style>\n    * {\n      box-sizing: border-box;\n    }\n\n    body {\n      margin: 0;\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      display: flex;\n      height: 100vh;\n    }\n\n    .sidebar {\n      width: 250px;\n      background-color: #1e2a38;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      border-right: 2px solid #00bcd4;\n    }\n\n    .sidebar h2 {\n      color: #00bcd4;\n      margin-bottom: 30px;\n      text-align: center;\n      font-size: 20px;\n    }\n\n    .menu a {\n      display: block;\n      padding: 12px 16px;\n      margin-bottom: 10px;\n      color: #f1f1f1;\n      text-decoration: none;\n      background-color: #2c3e50;\n      border-radius: 8px;\n      transition: background-color 0.2s ease;\n      cursor: pointer;\n    }\n\n    .menu a:hover {\n      background-color: #00bcd4;\n      color: #000;\n    }\n\n    .main {\n      flex: 1;\n      padding: 0;\n      overflow: hidden;\n    }\n\n    iframe {\n      width: 100%;\n      height: 100%;\n      border: none;\n    }\n\n    .placeholder {\n      color: #aaa;\n      padding: 30px;\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"sidebar\">\n    <h2>Zap Financeiro</h2>\n    <div class=\"menu\">\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/dashzapfinanceiro')\">游늵 Dashboard</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/usuarioszapfinanceiro')\">游꿡 Usuarios</a>\n      <a onclick=\"loadIframe('https://n8n.typebot.pro/webhook/zapfinanceiroadm')\">游뱋 Administradores</a>      \n    </div>\n  </div>\n\n  <div class=\"main\" id=\"content\">\n    <div class=\"placeholder\">Carregando Dashboard...</div>\n  </div>\n\n  <script>\n    function loadIframe(url) {\n      const content = document.getElementById('content');\n      content.innerHTML = `<iframe src=\"${url}\"></iframe>`;\n    }\n\n    window.onload = function() {\n      loadIframe('https://n8n.typebot.pro/webhook/dashzapfinanceiro');\n    };\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[340,-500],"id":"3b856328-44c0-4cc1-a353-5fea7e009c4b","name":"HTML"},{"parameters":{"path":"zapfinanceiro","responseMode":"responseNode","options":{}},"id":"91263449-7d92-47a3-8a32-15314a39739f","name":"Serve Frontend2","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[120,-500],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>An치lise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>An치lise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para an치lise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da An치lise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: N칚o foi poss칤vel analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"38c3d65f-8c47-4460-a89e-682240235f9f"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[560,-500],"id":"07e8faca-cbc2-4617-bc78-6ae9d07cbdd0","name":"Respond to Webhook2"},{"parameters":{"content":"## DASHBOARD - PAINEL\nACESSO INICIAL","height":340,"width":720,"color":4},"type":"n8n-nodes-base.stickyNote","position":[80,-620],"typeVersion":1,"id":"160476f0-c5fa-4a35-8915-a8f16349305d","name":"Sticky Note"},{"parameters":{"path":"usuarioszapfinanceiro","responseMode":"responseNode","options":{}},"id":"bd0af180-d440-4b3e-bd35-54330a8496cd","name":"Serve Frontend1","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[840,-140],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>An치lise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>An치lise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para an치lise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da An치lise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: N칚o foi poss칤vel analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"d4bce213-b499-48d3-9e64-c6e8efc3a3cd"},{"parameters":{"content":"## DASHBOARD ADMINISTRADORES\nEXIBE DADOS GERAIS Dos USUARIOS","height":340,"width":1320,"color":4},"type":"n8n-nodes-base.stickyNote","position":[820,220],"typeVersion":1,"id":"a88f06f1-f66c-4bb1-8fe4-70a0507546b4","name":"Sticky Note9"},{"parameters":{"path":"zapfinanceiroadm","responseMode":"responseNode","options":{}},"id":"77321c83-1c42-483e-9c28-c4f36db700bb","name":"Serve Frontend3","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[860,340],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>An치lise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>An치lise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para an치lise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da An치lise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: N칚o foi poss칤vel analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"d4bce213-b499-48d3-9e64-c6e8efc3a3cd"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1940,340],"id":"fde2483d-d568-46c2-8b6a-059dd5719d3a","name":"Respond to Webhook3"},{"parameters":{"assignments":{"assignments":[{"id":"734e5834-f180-4d42-8027-a5664518c505","name":"id","value":"={{ $json.id }}","type":"string"},{"id":"1f4fe8b9-f01d-4b1e-9f4e-046d819ffda2","name":"nome","value":"={{ $json.nome }}","type":"string"},{"id":"778a08d9-450f-475f-a071-3f4eb245a044","name":"email","value":"={{ $json.email }}","type":"string"},{"id":"a07bcb4b-7783-4a29-96f1-6c2b3c05b97d","name":"cargo","value":"Administrador","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1300,340],"id":"8c8cb525-4adf-494d-9ba8-112591aa279c","name":"dados1"},{"parameters":{"jsCode":"// Pega todos os registros recebidos\nconst registros = $input.all();\n\n// Inicia o HTML com o tema personalizado\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Administradores</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n  </style>\n</head>\n<body>\n  <h1>Todos os Jogadores</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>id</th>\n        <th>nome</th>\n        <th>email</th>\n        <th>cargo</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach(registro => {\n    const dados = registro.json;\n    html += `\n      <tr>\n        <td>${dados.id || 'N/A'}</td>\n        <td>${dados.nome || 'N/A'}</td>\n        <td>${dados.email || 'N/A'}</td>\n        <td>${dados.cargo || 'N/A'}</td>\n      </tr>\n    `;\n});\n\n// Fecha o HTML\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// Retorna o HTML como um novo item\nreturn [{ json: { html: html } }];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1520,340],"id":"47c592eb-77a9-437b-b4f6-01d876a395eb","name":"Code1"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Lista de Administradores</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Filtro -->\n  <div class=\"filtros\">\n    <label for=\"filtroEmail\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroEmail\" onkeyup=\"filtrarPorEmail()\" placeholder=\"Digite o email...\" style=\"padding:5px;margin-left:10px;color:black;\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Pagina칞칚o -->\n  <div class=\"paginacao\">\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Pr칩xima</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const email = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        if (email.includes(termoFiltro)) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `P치gina ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoFiltro = document.getElementById(\"filtroEmail\").value.toLowerCase();\n      const totalVisiveis = [...linhas].filter(l => l.cells[0]?.textContent.toLowerCase().includes(termoFiltro));\n      const totalPaginas = Math.ceil(totalVisiveis.length / linhasPorPagina);\n      if (paginaAtual < totalPaginas) {\n        paginaAtual++;\n        atualizarTabela();\n      }\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function filtrarPorEmail() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1740,340],"id":"f75bc660-405f-4678-b27a-627157f9bea8","name":"HTML5"},{"parameters":{"documentId":{"__rl":true,"value":"1NGpi4nP2hfBLV5mq9ZvcCSnec4qH_l2Wg-mmONQ3LzI","mode":"list","cachedResultName":"AGENTE IA - GASTOS","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1NGpi4nP2hfBLV5mq9ZvcCSnec4qH_l2Wg-mmONQ3LzI/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1561429989,"mode":"list","cachedResultName":"DASHBOARD","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1NGpi4nP2hfBLV5mq9ZvcCSnec4qH_l2Wg-mmONQ3LzI/edit#gid=1561429989"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1360,-780],"id":"fe3a995c-ad0c-4261-93c7-f9f44e0ed9c6","name":"Google Sheets","retryOnFail":true,"waitBetweenTries":2000,"credentials":{"googleSheetsOAuth2Api":{"id":"c1hmUtfYiP5FWVBk","name":"GOOGLE JAMIL"}}},{"parameters":{"operation":"getAll","tableId":"usuario","returnAll":true},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1060,-140],"id":"d281d2b4-4e97-46b5-a89b-212cbf4168fa","name":"Supabase","credentials":{"supabaseApi":{"id":"337Z7ndUMMaF8CZx","name":"Supabase ZAP FINANCEIRO"}}},{"parameters":{"content":"## DASHBOARD USUARIOS\nEXIBE DADOS GERAIS DOS USUARIOS","height":460,"width":1320,"color":4},"type":"n8n-nodes-base.stickyNote","position":[820,-260],"typeVersion":1,"id":"58c884ae-92ed-4289-8b7e-3fc7883c3df8","name":"Sticky Note10"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1940,-140],"id":"99ea189c-34b0-459f-b158-b3cf7cf17efb","name":"Respond to Webhook4"},{"parameters":{"jsCode":"const registros = $input.all();\n\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Despesas</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    select {\n      background-color: #1e2a38;\n      color: #f1f1f1;\n      border: 1px solid #2c3e50;\n      padding: 5px;\n      border-radius: 4px;\n    }\n  </style>\n</head>\n<body>\n  <h1>TODOS OS USUARIOS</h1>\n  <table>\n    <thead>\n      <tr>\n        <th>nome</th>\n        <th>Email</th>\n        <th>Telefone</th>\n        <th>Data</th>\n        <th>status</th>\n        <th>cargo</th>\n        <th>origem</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// Adiciona cada registro como uma linha na tabela\nregistros.forEach((registro, index) => {\n  const dados = registro.json;\n  const rowIndex = index + 2;\n\n  // Captura o status de forma robusta\n  const statusOriginal = dados.status || dados.Status || dados[\"status \"] || dados[\"STATUS\"] || 'aguardando pagamento';\n  const status = statusOriginal.toString().trim().toLowerCase();\n\n  html += `\n    <tr>\n      <td>${dados.nome || 'N/A'}</td>\n      <td>${dados.email || 'N/A'}</td>\n      <td>${dados.telefone || 'N/A'}</td>\n      <td>${dados.data || 'N/A'}</td>\n      <td>\n        <select data-index=\"${dados.id}\" onchange=\"atualizarStatus(this)\">\n          <option value=\"AGUARDANDO PAGAMENTO\" ${status === 'aguardando pagamento' ? 'selected' : ''}>AGUARDANDO PAGAMENTO</option>\n          <option value=\"ATIVO\" ${status === 'ativo' ? 'selected' : ''}>ATIVO</option>\n          <option value=\"N츾O ASSINANTE\" ${status === 'n칚o assinante' ? 'selected' : ''}>N츾O ASSINANTE</option>\n          <option value=\"TESTE FINALIZADO\" ${status === 'teste finalizado' ? 'selected' : ''}>TESTE FINALIZADO</option>\n        </select>\n      </td>\n      <td>${dados.cargo || 'N/A'}</td>\n      <td>${dados.origem || 'N/A'}</td>\n    </tr>\n  `;\n});\n\nhtml += `\n    </tbody>\n  </table>\n\n  <script>\n    async function atualizarStatus(selectElement) {\n      const rowIndex = selectElement.getAttribute('data-index');\n      const novoStatus = selectElement.value;\n\n      try {\n        const resposta = await fetch('/webhook/atualizar-status', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            rowIndex: rowIndex,\n            novoStatus: novoStatus\n          })\n        });\n\n        if (resposta.ok) {\n          alert('Status atualizado com sucesso!');\n        } else {\n          alert('Erro ao atualizar status.');\n        }\n      } catch (erro) {\n        alert('Erro de conex칚o: ' + erro.message);\n      }\n    }\n  </script>\n</body>\n</html>\n`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1500,-140],"id":"3800931d-e7ce-448e-90dd-1215fa51824f","name":"Code2"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>DESPESAS</title>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n    }\n    h1 {\n      color: #00bcd4;\n    }\n    table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-top: 20px;\n    }\n    th, td {\n      padding: 10px;\n      border-bottom: 1px solid #2c3e50;\n      text-align: left;\n    }\n    th {\n      background-color: #1e2a38;\n    }\n    tr:hover {\n      background-color: #1a2a40;\n    }\n    .filtros, .paginacao {\n      margin-top: 20px;\n    }\n    .paginacao button {\n      padding: 6px 12px;\n      margin-right: 10px;\n      background-color: #00bcd4;\n      color: #0f1b2b;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .paginacao button:hover {\n      background-color: #00acc1;\n    }\n    .filtros input {\n      padding: 5px;\n      margin-left: 10px;\n      color: black;\n    }\n  </style>\n</head>\n<body>\n\n  <h1>Todas as despesas</h1>\n\n  <!-- Filtros -->\n  <div class=\"filtros\">\n    <label for=\"filtroDescricao\">Filtrar por email:</label>\n    <input type=\"text\" id=\"filtroDescricao\" onkeyup=\"filtrar()\" placeholder=\"Digite descri칞칚o\">\n\n    <label for=\"filtroTelefone\" style=\"margin-left: 20px;\">Filtrar por Telefone:</label>\n    <input type=\"text\" id=\"filtroTelefone\" onkeyup=\"filtrar()\" placeholder=\"Digite telefone\">\n  </div>\n\n  <!-- Tabela -->\n  <table>\n    <tbody>\n      {{ $json.html }}\n    </tbody>\n  </table>\n\n  <!-- Pagina칞칚o -->\n  <div class=\"paginacao\">\n    <button onclick=\"paginaAnterior()\">Anterior</button>\n    <button onclick=\"proximaPagina()\">Pr칩xima</button>\n    <span id=\"paginacaoInfo\"></span>\n  </div>\n\n  <!-- Scripts -->\n  <script>\n    let paginaAtual = 1;\n    const linhasPorPagina = 50;\n\n    function atualizarTabela() {\n      const linhas = document.querySelectorAll(\"tbody tr\");\n      const termoDescricao = document.getElementById(\"filtroDescricao\").value.toLowerCase();\n      const termoTelefone = document.getElementById(\"filtroTelefone\").value.toLowerCase();\n\n      let linhasFiltradas = [];\n\n      linhas.forEach(linha => {\n        const descricao = linha.cells[0]?.textContent.toLowerCase() || \"\";\n        const telefone = linha.cells[2]?.textContent.toLowerCase() || \"\";\n\n        const descricaoMatch = descricao.includes(termoDescricao);\n        const telefoneMatch = telefone.includes(termoTelefone);\n\n        if (descricaoMatch && telefoneMatch) {\n          linha.style.display = \"\";\n          linhasFiltradas.push(linha);\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      const totalPaginas = Math.ceil(linhasFiltradas.length / linhasPorPagina);\n      if (paginaAtual > totalPaginas) paginaAtual = totalPaginas || 1;\n\n      linhasFiltradas.forEach((linha, index) => {\n        if (index >= (paginaAtual - 1) * linhasPorPagina && index < paginaAtual * linhasPorPagina) {\n          linha.style.display = \"\";\n        } else {\n          linha.style.display = \"none\";\n        }\n      });\n\n      document.getElementById(\"paginacaoInfo\").textContent = `P치gina ${paginaAtual} de ${totalPaginas}`;\n    }\n\n    function proximaPagina() {\n      paginaAtual++;\n      atualizarTabela();\n    }\n\n    function paginaAnterior() {\n      if (paginaAtual > 1) {\n        paginaAtual--;\n        atualizarTabela();\n      }\n    }\n\n    function filtrar() {\n      paginaAtual = 1;\n      atualizarTabela();\n    }\n\n    window.addEventListener(\"load\", () => {\n      atualizarTabela();\n    });\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1720,-140],"id":"d84962b7-190e-45df-a1fd-0b656506c61c","name":"HTML7"},{"parameters":{"httpMethod":"POST","path":"atualizar-status","options":{}},"id":"06198015-9ce5-427f-ba81-63714cd85d8f","name":"EntradaStatus","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[1720,40],"webhookId":"8f0e00f6-19fc-4cb4-9589-d98d5b41d333"},{"parameters":{"assignments":{"assignments":[{"id":"dd1dc8f0-2181-4618-86dc-a1037ba7e792","name":"id","value":"={{ $json.id }}","type":"string"},{"id":"734e5834-f180-4d42-8027-a5664518c505","name":"nome","value":"={{ $json.NOME }}","type":"string"},{"id":"78d7f803-048f-43c6-9b60-996fd057f4db","name":"email","value":"={{ $json.EMAIL }}","type":"string"},{"id":"55e37a3a-9ae1-483d-a48d-e3b871d47dc1","name":"telefone","value":"={{ $json.TELEFONE }}","type":"string"},{"id":"efa82688-b8c0-4ffa-b95c-2aec34614268","name":"data","value":"={{ $json['DATA DA COMPRA'] }}","type":"string"},{"id":"7688426f-e976-4a7a-bfc5-c101c0d0dc42","name":"status","value":"={{ $json.STATUS }}","type":"string"},{"id":"1fb525db-aae4-434a-897d-21e78024288f","name":"cargo","value":"={{ $json.CARGO }}","type":"string"},{"id":"3d1af628-1ba5-4165-b14c-af9534c87b40","name":"origem","value":"={{ $json.ORIGEM }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1280,-140],"id":"36aea239-da22-432f-bf2d-6a5ceaa1fd70","name":"dados2"},{"parameters":{"operation":"update","tableId":"usuario","matchType":"allFilters","filters":{"conditions":[{"keyName":"id","condition":"eq","keyValue":"={{ $json.body.rowIndex }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"STATUS","fieldValue":"={{ $json.body.novoStatus }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1940,40],"id":"3e558b54-2895-4c56-aa31-bd6e4de94fe9","name":"Supabase1","credentials":{"supabaseApi":{"id":"337Z7ndUMMaF8CZx","name":"Supabase ZAP FINANCEIRO"}}},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[520,-1200],"id":"7a473d8a-ef07-4255-8bdd-31a9cb45448b","name":"Respond to Webhook"},{"parameters":{"httpMethod":"POST","path":"loginzapfinanceiro","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[120,-980],"id":"3ae6b9ea-e271-40f3-af64-0862433553ab","name":"Webhook","webhookId":"b19c2770-c015-49ad-b8ff-11d133ba068b"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d11134e2-5b77-4259-b65b-98f2d25500df","leftValue":"={{ $json.email }}","rightValue":"={{ $('Webhook').item.json.body.email }}","operator":{"type":"string","operation":"equals"}},{"id":"bb4a2f6b-da05-4603-abd2-36bc6f9b1c16","leftValue":"={{ $json.password }}","rightValue":"={{ $('Webhook').item.json.body.password }}","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[500,-980],"id":"9519e379-b705-4d30-a4b2-aa4ac640746c","name":"If"},{"parameters":{"respondWith":"json","responseBody":"={\n  \"success\": true,\n  \"userId\": {{ $json.id }},\n  \"message\": \"Login realizado com sucesso\"\n}\n","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[780,-1040],"id":"f39e3935-178c-49d2-83f5-847d026687bf","name":"Sucesso"},{"parameters":{"respondWith":"json","responseBody":"{\n  \"success\": false,\n  \"message\": \"Credenciais inv치lidas\"\n}\n","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[780,-840],"id":"79527521-4b9b-4709-a328-48b93a07abed","name":"Erro"},{"parameters":{"path":"index","responseMode":"responseNode","options":{}},"id":"9ad5d7fb-c547-43e4-bdc6-eabf0795854d","name":"Serve Frontend4","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[120,-1200],"webhookPath":"frontend","method":"GET","responseMode":"onReceived","responseData":{"body":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>An치lise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>An치lise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para an치lise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da An치lise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: N칚o foi poss칤vel analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"},"responseHeaders":[{"name":"Content-Type","value":"text/html"}],"webhookId":"18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"},{"parameters":{"operation":"getAll","tableId":"user_roles","returnAll":true,"filterType":"none"},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[320,-980],"id":"af262706-dc8c-4098-a568-5945c8b2dd94","name":"Supabase2","alwaysOutputData":true,"credentials":{"supabaseApi":{"id":"337Z7ndUMMaF8CZx","name":"Supabase ZAP FINANCEIRO"}}},{"parameters":{"content":"## Login (User)","height":660,"width":940,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[80,-1300],"id":"837385a0-2286-4aac-97a6-c8e662734ecd","name":"Sticky Note2"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Login</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    body {\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n      height: 100vh;\n      background: url('https://img.freepik.com/premium-photo/whatsapp-logo-green-background-3d-rendering_494516-337.jpg') no-repeat center center;\n      background-size: cover;\n      color: #ffffff;\n      position: relative;\n    }\n\n    /* Sobreposi칞칚o escura para legibilidade */\n    .overlay {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100vh;\n      width: 100vw;\n      background: rgba(0, 0, 0, 0.75);\n      z-index: 1;\n    }\n\n    .popup {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 2;\n    }\n\n    .popup-content {\n      background: #1e1e1e;\n      padding: 20px;\n      border-radius: 8px;\n      width: 300px;\n      text-align: center;\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n    }\n\n    h3 {\n      font-weight: 600;\n      margin-bottom: 20px;\n    }\n\n    input {\n      padding: 10px;\n      margin-bottom: 10px;\n      border: 1px solid #444;\n      border-radius: 4px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      width: 100%;\n    }\n\n    button {\n      width: 100%;\n      padding: 10px;\n      background-color: #45DE71;\n      border: none;\n      color: #121212;\n      border-radius: 4px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.3s ease;\n    }\n\n    button:disabled {\n      background-color: #444;\n      cursor: not-allowed;\n    }\n\n    button:hover:enabled {\n      background-color: #36b659;\n    }\n\n    #loginError {\n      color: #E83F4C;\n      font-size: 14px;\n      margin-top: 10px;\n    }\n\n    #dashboardFrame {\n      display: none;\n      width: 100%;\n      height: 100vh;\n      border: none;\n      z-index: 3;\n      position: relative;\n    }\n  </style>\n</head>\n<body>\n\n  <!-- Sobreposi칞칚o escura -->\n  <div class=\"overlay\"></div>\n\n  <!-- Pop-up de Login -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h3>Login</h3>\n      <input type=\"email\" id=\"email\" placeholder=\"E-mail\" required />\n      <input type=\"password\" id=\"password\" placeholder=\"Senha\" required />\n      <button id=\"loginButton\">Entrar</button>\n      <div id=\"loginError\"></div>\n    </div>\n  </div>\n\n  <!-- Dashboard oculta por padr칚o -->\n  <iframe id=\"dashboardFrame\" src=\"\"></iframe>\n\n<script>\n  document.getElementById('loginButton').addEventListener('click', async () => {\n    const loginButton = document.getElementById('loginButton');\n    const email = document.getElementById('email').value.trim();\n    const password = document.getElementById('password').value.trim();\n    const errorDiv = document.getElementById('loginError');\n\n    loginButton.disabled = true;\n    loginButton.textContent = 'Entrando...';\n    errorDiv.textContent = '';\n\n    try {\n      const response = await fetch('https://n8n.typebot.pro/webhook/loginzapfinanceiro', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n      });\n\n      const result = await response.json();\n\n      if (response.ok && result.success) {\n        // Oculta login e sobreposi칞칚o, mostra dashboard\n        document.getElementById('loginPopup').style.display = 'none';\n        document.querySelector('.overlay').style.display = 'none';\n        const dashboard = document.getElementById('dashboardFrame');\n        dashboard.src = 'https://n8n.typebot.pro/webhook/zapfinanceiro';\n        dashboard.style.display = 'block';\n      } else {\n        errorDiv.textContent = result.message || 'Login inv치lido.';\n      }\n    } catch (error) {\n      errorDiv.textContent = 'Erro ao tentar fazer login.';\n    } finally {\n      loginButton.disabled = false;\n      loginButton.textContent = 'Entrar';\n    }\n  });\n</script>\n\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[320,-1200],"id":"c906f8d4-2031-4800-84f9-45e752421303","name":"HTML3"},{"parameters":{"operation":"getAll","tableId":"user_roles","returnAll":true},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1080,340],"id":"5b31de55-a1a4-43d6-8b08-12ea52baa618","name":"Supabase3","credentials":{"supabaseApi":{"id":"337Z7ndUMMaF8CZx","name":"Supabase ZAP FINANCEIRO"}}},{"parameters":{"operation":"getAll","tableId":"usuario","returnAll":true},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1120,-500],"id":"e0d76cef-fd66-4e20-9d11-b6d97a4fc8e9","name":"Supabase5","credentials":{"supabaseApi":{"id":"337Z7ndUMMaF8CZx","name":"Supabase ZAP FINANCEIRO"}}},{"parameters":{"jsCode":"const data = items.map(item => item.json);\n\n// Contagem total\nconst totalCount = data.length;\n\n// Contagem por status\nconst statusCounts = data.reduce((acc, item) => {\n  const status = item['STATUS'];\n  acc[status] = (acc[status] || 0) + 1;\n  return acc;\n}, {});\n\n// Retorna o resultado final com totalCount e statusCounts\nreturn [\n  {\n    json: {\n      totalCount,\n      statusCounts\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1400,-500],"id":"bcdba755-2c82-44c4-bf28-a54784b224a4","name":"Code4"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Dashboard ZAP FINANCEIRO</title>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n  <style>\n    body {\n      background-color: #0f1b2b;\n      color: #f1f1f1;\n      font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n      padding: 20px;\n    }\n\n    h1 {\n      text-align: center;\n      background-color: #00bcd4;\n      color: #000;\n      padding: 12px;\n      border-radius: 10px;\n      font-size: 24px;\n    }\n\n    h2 {\n      margin-top: 30px;\n      color: #00bcd4;\n      border-bottom: 2px solid #00bcd4;\n      padding-bottom: 5px;\n      font-size: 18px; /* Define o tamanho da fonte */\n    }\n\n    .container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 15px;\n      justify-content: space-between;\n    }\n\n    .card {\n      background-color: #1e2a38;\n      padding: 15px;\n      flex: 1 0 22%;\n      border-radius: 12px;\n      border: 1px solid #00bcd4;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n      transition: transform 0.2s ease;\n    }\n\n    .card:hover {\n      transform: scale(1.03);\n    }\n\n    .card h3 {\n      color: #a8dadc;\n      font-size: 14px;\n      margin: 0 0 5px 0;\n      font-weight: 500;\n    }\n\n    .card p {\n      font-size: 20px;\n      font-weight: bold;\n      color: #f1faee;\n      margin: 0;\n    }\n\n    .charts-row {\n      display: flex;\n      justify-content: center;\n      gap: 40px;\n      margin-top: 30px;\n      flex-wrap: wrap;\n    }\n\n    .chart-box {\n      background-color: #264653;\n      padding: 20px;\n      border-radius: 10px;\n      width: 320px;\n      height: 340px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    canvas {\n      width: 300px !important;\n      height: 300px !important;\n    }\n  </style>\n</head>\n<body>\n  <h1>DASHBOARD ZAP FINANCEIRO - DATA {{ new Date().toLocaleDateString('pt-BR') }}</h1>\n\n  <h2>USUARIOS TOTAIS</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>USUARIOS TOTAIS</h3><p>{{ $json.totalCount }}</p></div>\n    <div class=\"card\"><h3>N춿 ATIVOS</h3><p>{{ $json.statusCounts.ATIVO }}</p></div>\n    <div class=\"card\"><h3>N춿 BLOQUEADOS</h3><p>{{ $json.statusCounts.BLOQUEADO }}</p></div>\n    <div class=\"card\"><h3>N츾O ASSINANTES</h3><p>{{ $json.statusCounts['N츾O ASSINANTE'] }}</p></div>\n    <div class=\"card\"><h3>AGUARDANDO PAGAMENTO</h3><p>{{ $json.statusCounts['AGUARDANDO PAGAMENTO'] }}</p></div>\n    <div class=\"card\"><h3>TESTE FINALIZADO</h3><p>{{ $json.statusCounts['TESTE FINALIZADO'] }}</p></div>\n    <div class=\"card\"><h3>NUMEROS INTERNACIONAIS</h3><p>{{ $json.statusCounts['NUMERO INTERNACIONAL'] }}</p></div>\n    <div class=\"card\"><h3>VENDAS EXTORNADAS</h3><p>{{ $json.statusCounts.EXTORNADA }}</p></div>\n  </div>\n\n  <h2>VENDAS PLATAFORMA</h2>\n  <div class=\"container\">\n    <div class=\"card\"><h3>PERFECTPAY</h3><p>{{ $json.data[0].PERFECTPAY }}</p></div>\n    <div class=\"card\"><h3>LASTLINK</h3><p>{{ $json.data[0].LASTLINK }}</p></div>    \n  </div>\n\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1660,-500],"id":"24b15cc8-375c-45b7-a29c-6231b310a45b","name":"HTML4"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1920,-500],"id":"ff382a64-1c25-402b-afca-7a84ca1a5cb3","name":"Respond to Webhook6"}],"connections":{"Aggregate":{"main":[[{"node":"HTML1","type":"main","index":0}]]},"Serve Frontend":{"main":[[{"node":"Supabase5","type":"main","index":0}]]},"HTML1":{"main":[[{"node":"Respond to Webhook1","type":"main","index":0}]]},"Serve Frontend2":{"main":[[{"node":"HTML","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Respond to Webhook2","type":"main","index":0}]]},"Serve Frontend1":{"main":[[{"node":"Supabase","type":"main","index":0}]]},"Respond to Webhook1":{"main":[[]]},"Serve Frontend3":{"main":[[{"node":"Supabase3","type":"main","index":0}]]},"dados1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"HTML5","type":"main","index":0}]]},"HTML5":{"main":[[{"node":"Respond to Webhook3","type":"main","index":0}]]},"Google Sheets":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Supabase":{"main":[[{"node":"dados2","type":"main","index":0}]]},"Code2":{"main":[[{"node":"HTML7","type":"main","index":0}]]},"HTML7":{"main":[[{"node":"Respond to Webhook4","type":"main","index":0}]]},"EntradaStatus":{"main":[[{"node":"Supabase1","type":"main","index":0}]]},"dados2":{"main":[[{"node":"Code2","type":"main","index":0}]]},"If":{"main":[[{"node":"Sucesso","type":"main","index":0}],[{"node":"Erro","type":"main","index":0}]]},"Serve Frontend4":{"main":[[{"node":"HTML3","type":"main","index":0}]]},"Supabase2":{"main":[[{"node":"If","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Supabase2","type":"main","index":0}]]},"HTML3":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Supabase3":{"main":[[{"node":"dados1","type":"main","index":0}]]},"Supabase5":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Code4":{"main":[[{"node":"HTML4","type":"main","index":0}]]},"HTML4":{"main":[[{"node":"Respond to Webhook6","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"2a1cf1be-fd63-4210-8285-f2501a09d516","triggerCount":7,"tags":[]}